/***
	SpellingBee.js 2.1
	
	**No copyright infringement is intended. No mirror image of this library should be made without creator's consent.
	**This is not expected to work as intended because this is my first library, so let me know if you have problems so I can update the library.
***/
(function(window, undefined) {
	var $spelling_bee = function(name) {
		// Instanciate and utilize our library
		if(window === this) {
			return new $spelling_bee(name);
		}
		
		this.spellingBee = {};
		this.spellingBee.SpellingBee = {};
		this.spellingBee.name = name;
		
		//Check to make sure that the name is a string
		if(typeof this.spellingBee.name != "string") {
			throw new Error("Spelling bee name is of the wrong type");
		}
		
		this.spellingBee.createSpellingBee = function(words, definitions) {
			//Check to see if the words and definitions are arrays
			if(typeof words === Array && typeof definitions === Array) {
				this.spellingBee.SpellingBee.spellingbee = document.createElement("form");
				this.spellingBee.SpellingBee.spellingbee.setAttribute("name", "spellingBee");
				this.spellingBee.SpellingBee.spellingbee.setAttribute("method", "POST");
				
				for(var j = 0; j < definitions.length; j++) {
					for(var i = 0; i < words.length; i++) {
						//Create a label with the definition
						var label = document.createElement("label");
						var myLabel = document.createTextNode(definitions[j]);
						label.appendChild(myLabel);
						this.spellingBee.SpellingBee.spellingbee.appendChild(label);
						
						//Create a field for people to spell
						var spellingArea = document.createElement("input");
						spellingArea.setAttribute("type", "text");
						spellingArea.setAttribute("name", "spell");
						this.spellingBee.SpellingBee.spellingbee.appendChild(spellingArea);
						
						//Create a check button
						var checkButton = document.createElement("input");
						checkButton.setAttribute("type", "submit");
						checkButton.setAttribute("value", "check");
						checkButton.onclick = function() {
							//Check to see if a word was entered into the input
							var field = document.forms["spellingBee"]["spell"].value;
							
							if(field == null || field == "") {
								window.alert("You have not made an attempt to spell a word. Please fill the field out.");
							} else {
								var word = new RegExp(words[i], "i");
								var input = new RegExp(field, "i");
								
								if(field === word) {
									var correctStatement = "Correct!";
									var division = document.createElement("div");
									var $p = document.createElement("p");
									var pText = document.createTextNode(correctStatement);
									pText.style.color = "green";
									pText.style.fontSize = "30px";
									$p.appendChild(pText);
									division.appendChild($p);
									document.body.appendChild(division);
								} else {
									window.alert("Try again!");
								}
							}
						};
						this.spellingBee.SpellingBee.spellingbee.appendChild(checkButton);
						
						document.body.appendChild(this.spellingBee.SpellingBee.spellingbee);
					}
				}
			} else {
				throw new Error("Either you have only one word and definition, or the definitions and words aren't arrays. Please repair that.");
			}
		};
		
		this.spellingBee.removeSpellingBee = function() {
			//Remove entire spelling bee
			document.body.removeChild(this.spellingBee.SpellingBee.spellingbee);
		};
		
		this.spellingBee.importSpellingBee = function() {
			//Define function that locates elements based on its attribute
			function findElementByAttr(attr, val) {
				var DOMElements = document.getElementsByTagName("*");
				for(var i = 0; i < DOMElements.length; i++) {
					if(DOMElements.getAttribute(attr) == val) {
						return DOMElements[i];
					}
				}
			};
			
			var spellingBeeForm = findElementByAttr("name", "spellingBee")
			var externalSpellingBee = document.importNode(spellingBeeForm, true);
			document.body.appendChild(externalSpellingBee);
		};
		return this;
	};
	window.$spelling_bee = $spelling_bee;
})(window);
