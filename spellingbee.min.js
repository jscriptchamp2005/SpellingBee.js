/***
	SpellingBee.js 4.0
	
	**No copyright infringement is intended. No mirror image of this library should be made without creator's consent.
	**This is not expected to work as intended because this is my first library, so let me know if you have problems so I can update the library.
	**Contact me on Github as jscriptchamp2005.
	**I give credit to the creators of jQuery because I am using their library as a model for mine.
***/
(function(window, undefined) {
	var $spelling_bee = function(words, definitions) {
		// Instanciate and utilize our library
		if(window === this) {
			return new $spelling_bee(words);
		}
		
		//Map function in case of overwrite
		_$spelling_bee = window._$spelling_bee;
		
		var spellingBee = {};
		spellingBee.words = words;
		return spellingBee;
		
		return this;
	};
	
	$spelling_bee.fn = $spelling_bee.prototype = {
		libraryNamespace: {},
		checkArray: function() {
			if(!Array.isArray(words) || !Array.isArray(definitions)) {
				throw new Error("Argument(s) is/are of wrong type");
			} else if((!Array.isArray(words) || !Array.isArray(definitions)) || (typeof words === "string")) {
				words = (function() {
					return "[" + words + "]";
				})();
			} else if((!Array.isArray(words) || !Array.isArray(definitions)) || (typeof definitions === "string")) {
				definitions = (function() {
					return "[" + definitions + "]";
				})();
			} else {
				return;
			}
		},
		createSpellingBee: function() {
			this.checkArray();
			
			var form = document.createElement("form");
			form.setAttribute("name", "spelling-bee");
			form.setAttribute("action", "#");
			form.setAttribute("method", "POST");
			
			for(var j = 0; j < definitions.length; i++) {
				for(var i = 0; i < words.length; i++) {
					form.setAttribute("onsubmit", "return generateNewBee()");
					function generateNewBee() {
						var label = document.createElement("label");
						var myLabel = document.createTextNode(definitions[j]);
						label.appendChild(myLabel);
						form.appendChild(label);
						
						var spellingArea = document.createElement("input");
						spellingArea.setAttribute("type", "text");
						spellingArea.setAttribute("name", "area");
						form.appendChild(spellingArea);
						
						var check = document.createElement("input");
						check.setAttribute("type", "submit");
						check.setAttribute("value", "Submit!");
					}
				}
			}
		},
		removeSpellingBee: function() {
			libraryNamespace.spellingBee = (function findElementsByAttr(attr, val) {
				var all = document.getElementsByTagName('*');
				for(var i = 0; i < all.length; i++) {
					if(all[i].getAttribute(attr) == val) {
						return all[i];
					}
				}
			})("name", "spelling-bee");
			document.body.removeChild(libraryNamespace.spellingBee);
		},
		importSpellingBee: function() {
			var externalBee = document.importNode(libraryNamespace.spellingBee);
			document.body.appendChild(externalBee);
		}
	};
	window.$spelling_bee = $spelling_bee;
})(window);
